apiVersion: apps/v1
kind: Deployment
metadata: 
  name: swis-api-deployment
  labels:
    app: swapi
spec:
  replicas: 2
  selector:
    matchLabels:
      app: swapi
  template:
    metadata:
      labels:
        app: swapi
    spec:
      containers:
      - name: swis-api
        image: swis-api:5.2.27-go1.20.2
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8049
        env:
        - name: ROOT_TOKEN
          value: "1c4c39441425ac4f971682697e8c6536b2fab739b4ccebcce74323970512fad2c67845c5a1df84087ce85af6a4cb422e972f3e425821fe121004d99cce46c48d"
        - name: DOCKER_INTERNAL_PORT
          value: "8049"

---

apiVersion: v1
kind: Service
metadata:
  labels:
    app: swapi
  name: swapi-service
spec:
  #type: NodePort
  ports:
  - port: 8049
    protocol: TCP
    targetPort: 8049
    nodePort: 31049
  selector:
    app: swapi
  #type: ClusterIP
  type: LoadBalancer
  externalTrafficPolicy: Cluster

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: swapi-ingress
  namespace: default
  annotations:
    ingress.kubernetes.io/rewrite-target: /
    kubernetes.io/ingress.class: nginx
spec:
  defaultBackend:
    service:
      name: swapi-service
      port:
        number: 8049
  rules:
    #- host: swapi-k8s-dev.savla.su
    - http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: swapi-service
                port: 
                  number: 8049

---

apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: network-policy
  namespace: default
spec:
  ingress:
  - {}
  podSelector:
    matchLabels:
      app.kubernetes.io/name: ingress-nginx
  policyTypes:
  - Ingress
