version: '3.9'

networks:
  traefik_savla:
    name: ${DOCKER_NETWORK_NAME}

volumes:
  swis-data:
    name: swis-data

services:
  swis-api-prod:
    image: ${DOCKER_IMAGE_TAG}
    container_name: ${DOCKER_CONTAINER_NAME}
    build:
      context: .
      dockerfile: .docker/Dockerfile
      args: 
        GOLANG_VERSION: ${GOLANG_VERSION} 
        ALPINE_VERSION: ${ALPINE_VERSION}
        APP_NAME: ${APP_NAME}
        APP_ROOT: ${APP_ROOT}
        DOCKER_INTERNAL_PORT: ${DOCKER_INTERNAL_PORT} 
        DOCKER_USER: ${DOCKER_USER}
    restart: unless-stopped
    command: ${APP_FLAGS}
    environment:
      - ALPINE_VERSION=${ALPINE_VERSION}
      - APP_ENVIRONMENT=${APP_ENVIRONMENT}
      - APP_NAME=${APP_NAME}
      - APP_VERSION=${APP_VERSION}
      - DOCKER_INTERNAL_PORT=${DOCKER_INTERNAL_PORT}
      - GIN_MODE=${GIN_MODE}
      - GOLANG_VERSION=${GOLANG_VERSION}
      - ROOT_TOKEN=${ROOT_TOKEN}
      - TZ=${TZ}
    volumes: 
      - "swis-data:${APP_ROOT}"
    cpus: 0.33
    dns:
      - 10.4.5.130
      - 1.1.1.2
      - 1.0.0.2
    mem_reservation: 128m
    ports:
      - "${DOCKER_EXTERNAL_PORT}:${DOCKER_INTERNAL_PORT}/tcp"
    networks:
      - ${DOCKER_NETWORK_NAME}
    labels:
      - "traefik.http.routers.${APP_NAME}.rule=Host(${APP_URLS_TRAEFIK})"
      - "traefik.http.services.${APP_NAME}.loadbalancer.server.port=${DOCKER_INTERNAL_PORT}"
      - "traefik.docker.network=${DOCKER_NETWORK_NAME}"

  swagger_ui:
    image: swaggerapi/swagger-ui
    container_name: swagger-swapi
    ports: 
      - target: 8080
        published: 8999
        mode: host
        protocol: tcp
    environment: 
      BASE_URL: "/"
      SWAGGER_JSON: "/tmp/swagger.json"
    networks: 
      - ${DOCKER_NETWORK_NAME}
    volumes: 
      - "./docs/swagger.json:/tmp/swagger.json"
    labels:
      - "traefik.http.routers.${APP_NAME}-swagger.rule=Host(`swapi-docs.savla.su`)"
      #- "traefik.http.routers.${APP_NAME}-swagger.rule=Host(`swapi-docs.savla.su`) && PathPrefix(`/docs`)"
      - "traefik.http.services.${APP_NAME}-swagger.loadbalancer.server.port=8080"
      #- "traefik.http.middlewares.${APP_NAME}.stripprefix.prefixes=/docs"
      - "traefik.docker.network=${DOCKER_NETWORK_NAME}"

